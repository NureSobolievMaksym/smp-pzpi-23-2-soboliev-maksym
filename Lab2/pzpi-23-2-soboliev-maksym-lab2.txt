МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
 
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
 
Кафедра «Програмна інженерія»
 
 




ЗВІТ
з практичної роботи №1  
з дисципліни «Скриптові мови програмування»


 



 










Виконав:                                                                                 Прийняв:
ст. гр. ПЗПІ-23-2                                                              ст. викл. Сокорчкук І. П. 
Соболєв М.А.










Харків 2025
1. Мета та завдання роботи
Мета роботи – здобуття практичних навичок у розробці інтерактивних консольних застосунків на мові PHP. Закріплення знань про керуючі конструкції, функції, масиви, валідацію даних та організацію циклу життя програми (Application Loop).
Завдання роботи:
1. Розробити PHP-скрипт, що емулює роботу консольного застосунку «Продовольчий магазин "Весна"».
2. Реалізувати головне меню з можливістю вибору дій: вибір товарів, перегляд рахунку, налаштування профілю та вихід з програми.
3. Створити режим вибору товарів, де користувач може додавати товари до кошика, вказуючи їх кількість, а також видаляти їх.
4. Реалізувати функцію формування підсумкового рахунку, що відображає перелік товарів у кошику, їх ціну, кількість, вартість та загальну суму до сплати.
5. Додати можливість налаштування профілю користувача (ім'я та вік) з валідацією введених даних.
6. Забезпечити надійну валідацію всього вводу від користувача (пункти меню, номери товарів, кількість, ім'я, вік) та виводити відповідні повідомлення про помилки.
2. Теоретичні відомості
Для виконання завдання було використано такі засоби та концепції мови програмування PHP:
* PHP CLI (Command-Line Interface): Режим роботи PHP, що дозволяє виконувати скрипти безпосередньо з командного рядка, без участі веб-сервера. Це ідеальний інструмент для створення консольних утиліт та застосунків.
* Shebang (#!/usr/bin/env php): Перший рядок скрипта, який вказує операційній системі, що даний файл слід виконувати за допомогою інтерпретатора php, знайденого в системних шляхах PATH. Це робить скрипт безпосередньо виконуваним.
* Стандартні потоки вводу/виводу:
   * STDIN: Стандартний потік вводу, з якого зчитуються дані, введені користувачем. Для цього використовується функція fgets(STDIN).
   * echo: Стандартна конструкція мови для виведення даних у стандартний потік виводу.
* Масиви (Arrays): Ключова структура даних, що використовувалася для зберігання стану програми:
   * Індексований/асоціативний масив $products: для зберігання каталогу товарів, де ключ – ID товару, а значення – асоціативний масив з його назвою та ціною.
   * Асоціативний масив $basket: для зберігання кошика користувача, де ключ – ID товару, а значення – його кількість.
* Керуючі конструкції:
   * while (true): Створює нескінченний цикл, який є основою роботи програми (головний цикл та цикли меню), що переривається лише командою виходу (exit або return).
   * switch: Використовується для обробки вибору користувача в головному меню.
   * if/else: Застосовується для перевірки умов та валідації даних.
* Функції: Програма структурована за допомогою функцій для кращої читабельності, уникнення дублювання коду та логічного розділення функціоналу (display_main_menu, handle_product_selection тощо).
* Передача параметрів за посиланням (&): Використовується для функцій, які повинні модифікувати глобальні змінні стану ($basket, $userProfile), наприклад function handle_product_selection(array &$basket, ...).
* Валідація даних:
   * filter_var($input, FILTER_VALIDATE_INT): Надійний спосіб перевірки, чи є введене значення цілим числом.
   * preg_match('/[...]/u', $name): Використання регулярних виразів для перевірки, чи містить рядок хоча б одну літеру (флаг u забезпечує підтримку Unicode/кирилиці).
* Форматування виводу:
   * str_pad(): Функція для доповнення рядка до певної довжини іншими символами, що дозволяє створювати рівні, табличні колонки в консолі.
3. Опис програмної реалізації
3.1. Загальна структура та управління станом
В основі скрипта лежать три глобальні змінні, що визначають його стан: $products (каталог товарів), $basket (кошик) та $userProfile (профіль). Вся програма працює всередині нескінченного циклу while(true), який відображає головне меню та очікує на команду користувача. Залежно від введеної команди, викликається відповідна функція-обробник.
3.2. Функції-обробники
* handle_product_selection(array &$basket, array $products): Реалізує логіку вибору товарів. Вона входить у власний цикл, де відображає меню товарів, зчитує номер та кількість, валідує їх та модифікує масив $basket, переданий за посиланням.
* handle_checkout(array $basket, array $products): Ітерує по масиву кошика. Для кожного товару знаходить його дані в масиві $products, розраховує вартість (ціна * кількість) та загальну суму. Результат виводиться у вигляді форматованої таблиці.
* handle_profile_setup(array &$profile): Запитує ім'я та вік користувача. Кожне введене значення пропускається через цикл валідації, який не дозволяє продовжити, доки дані не відповідатимуть вимогам (ім'я не порожнє і містить літери, вік від 7 до 150 років).
3.3. Валідація вводу
Надійність програми забезпечується перевірками на кожному етапі взаємодії з користувачем:
* Вибір у головному меню перевіряється конструкцією switch, де блок default обробляє всі непередбачені значення.
* Функція read_integer_input() одразу відсіює нечислові значення.
* При виборі товару перевіряється, чи існує введений ID в масиві $products (array_key_exists).
* Кількість товару перевіряється на відповідність діапазону (0-99).
* Дані профілю валідуються за допомогою регулярного виразу для імені та порівняння для віку.
4. Результати виконання
4.1. Сеанс роботи з програмою
Запуск та головне меню:
$ ~/soboliev-maksym-task3.php
################################
# ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
################################
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
1. Вибір товарів та додавання в кошик:
Введіть команду: 1
№  НАЗВА                   ЦІНА
1  Молоко пастеризоване     12
2  Хліб чорний              9
...
0  ПОВЕРНУТИСЯ
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 3


У КОШИКУ:
НАЗВА                   КІЛЬКІСТЬ
Хліб чорний             3


Натисніть Enter, щоб продовжити вибір товарів...
2. Перегляд підсумкового рахунку:
Введіть команду: 2
№  НАЗВА                   ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ
1  Хліб чорний              9     3          27
---------------------------------------------------------
РАЗОМ ДО CПЛАТИ: 27


Натисніть Enter, щоб повернутися до головного меню...
3. Обробка помилки вводу:
Ваш вік: 5
ПОМИЛКА! Вік має бути числом від 7 до 150.
Ваш вік: _
4. 5. Висновки
У ході виконання роботи було розроблено повноцінний консольний застосунок на мові PHP. Були закріплені навички проєктування інтерактивної взаємодії з користувачем, управління станом програми за допомогою змінних та масивів, а також валідації вхідних даних.
Використання функцій з передачею параметрів за посиланням дозволило ефективно структурувати код та уникнути використання глобальних змінних усередині функцій, що є гарною практикою програмування. Застосування функцій форматування виводу, таких як str_pad, показало можливість створення зручного для читання інтерфейсу навіть у текстовій консолі.
Дана робота демонструє, що PHP є гнучкою мовою, придатною не тільки для веб-розробки, але і для створення інтерактивних CLI-застосунків.
6. Лістинг програми
#!/usr/bin/env php
<?php


// =============================================================================
// Консольний застосунок «Продовольчий магазин "Весна"»
// Автор: Maksym Soboliev
// Лабораторна робота №2, Завдання 2.2
// =============================================================================


// --- Глобальні змінні та дані ---


// Асортимент товарів магазину
$products = [
    1 => ['name' => 'Молоко пастеризоване', 'price' => 12],
    2 => ['name' => 'Хліб чорний',           'price' => 9],
    3 => ['name' => 'Сир білий',              'price' => 21],
    4 => ['name' => 'Сметана 20%',            'price' => 25],
    5 => ['name' => 'Кефір 1%',               'price' => 19],
    6 => ['name' => 'Вода газована',          'price' => 18],
    7 => ['name' => 'Печиво "Весна"',         'price' => 14],
];


// Кошик користувача: [productId => quantity]
$basket = [];


// Профіль користувача
$userProfile = [
    'name' => null,
    'age' => null,
];




// --- Функції ---


/**
 * Очищує консоль (кросплатформено)
 */
function clear_screen() {
    PHP_OS_FAMILY === 'Windows' ? system('cls') : system('clear');
}


/**
 * Відображає головне меню програми
 */
function display_main_menu() {
    echo "################################\n";
    echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
    echo "################################\n";
    echo "1 Вибрати товари\n";
    echo "2 Отримати підсумковий рахунок\n";
    echo "3 Налаштувати свій профіль\n";
    echo "0 Вийти з програми\n";
}


/**
 * Відображає список товарів для вибору
 */
function display_products_menu(array $products) {
    echo "№  НАЗВА                   ЦІНА\n";
    foreach ($products as $id => $product) {
        $namePadded = str_pad($product['name'], 25);
        $idPadded = str_pad($id, 2);
        echo "{$idPadded} {$namePadded} {$product['price']}\n";
    }
    echo "   -----------\n";
    echo "0  ПОВЕРНУТИСЯ\n";
}


/**
 * Відображає вміст кошика
 */
function display_basket(array $basket, array $products) {
    if (empty($basket)) {
        echo "КОШИК ПОРОЖНІЙ\n";
        return;
    }
    echo "У КОШИКУ:\n";
    echo "НАЗВА                   КІЛЬКІСТЬ\n";
    foreach ($basket as $productId => $quantity) {
        $name = $products[$productId]['name'];
        $namePadded = str_pad($name, 25);
        echo "{$namePadded} {$quantity}\n";
    }
}


/**
 * Безпечно зчитує ціле число з консолі
 * @return int|false
 */
function read_integer_input() {
    $input = trim(fgets(STDIN));
    if (filter_var($input, FILTER_VALIDATE_INT) === false && $input !== '0') {
        return false;
    }
    return (int)$input;
}


/**
 * Обробляє процес вибору товарів
 */
function handle_product_selection(array &$basket, array $products) {
    while (true) {
        clear_screen();
        display_products_menu($products);
        echo "Виберіть товар: ";
        $productId = read_integer_input();


        if ($productId === 0) {
            return; // Повернення до головного меню
        }


        if ($productId === false || !array_key_exists($productId, $products)) {
            echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
            sleep(2); // Затримка для прочитання помилки
            continue;
        }


        echo "Вибрано: {$products[$productId]['name']}\n";
        echo "Введіть кількість, штук: ";
        $quantity = read_integer_input();


        if ($quantity === false || $quantity < 0 || $quantity >= 100) {
             echo "ПОМИЛКА! Кількість має бути числом від 0 до 99.\n";
             sleep(2);
             continue;
        }


        if ($quantity === 0) {
            if (isset($basket[$productId])) {
                unset($basket[$productId]);
                echo "ВИДАЛЯЮ З КОШИКА\n";
            }
        } else {
            $basket[$productId] = $quantity;
        }
        
        clear_screen();
        display_basket($basket, $products);
        echo "\nНатисніть Enter, щоб продовжити вибір товарів...";
        fgets(STDIN);
    }
}


/**
 * Обробляє та виводить підсумковий рахунок
 */
function handle_checkout(array $basket, array $products) {
    clear_screen();
    if (empty($basket)) {
        echo "КОШИК ПОРОЖНІЙ. Нічого сплачувати.\n";
        return;
    }


    echo "№  НАЗВА                   ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ\n";
    $totalSum = 0;
    $itemNumber = 1;


    foreach ($basket as $productId => $quantity) {
        $product = $products[$productId];
        $cost = $product['price'] * $quantity;
        $totalSum += $cost;


        $numPadded = str_pad($itemNumber, 2);
        $namePadded = str_pad($product['name'], 25);
        $pricePadded = str_pad($product['price'], 5);
        $quantityPadded = str_pad($quantity, 9);


        echo "{$numPadded} {$namePadded} {$pricePadded} {$quantityPadded} {$cost}\n";
        $itemNumber++;
    }
    echo "---------------------------------------------------------\n";
    echo "РАЗОМ ДО CПЛАТИ: {$totalSum}\n";
}


/**
 * Обробляє налаштування профілю користувача
 */
function handle_profile_setup(array &$profile) {
    clear_screen();
    echo "--- НАЛАШТУВАННЯ ПРОФІЛЮ ---\n";


    // Введення та валідація імені
    while (true) {
        echo "Ваше ім'я: ";
        $name = trim(fgets(STDIN));
        if (!empty($name) && preg_match('/[a-zA-Zа-яА-ЯіїІЇєЄ]/u', $name)) {
            $profile['name'] = $name;
            break;
        } else {
            echo "ПОМИЛКА! Ім'я не може бути порожнім і повинно містити літери.\n";
        }
    }


    // Введення та валідація віку
    while (true) {
        echo "Ваш вік: ";
        $age = read_integer_input();
        if ($age !== false && $age >= 7 && $age <= 150) {
            $profile['age'] = $age;
            break;
        } else {
            echo "ПОМИЛКА! Вік має бути числом від 7 до 150.\n";
        }
    }
    echo "Профіль оновлено! Ваше ім'я: {$profile['name']}, ваш вік: {$profile['age']}.\n";
}


// --- Головний цикл програми ---
clear_screen();
while (true) {
    display_main_menu();
    echo "Введіть команду: ";
    $command = read_integer_input();


    if ($command === false) {
        clear_screen();
        echo "ПОМИЛКА! Будь ласка, введіть число.\n\n";
        continue;
    }


    switch ($command) {
        case 1:
            handle_product_selection($basket, $products);
            clear_screen();
            break;
        case 2:
            handle_checkout($basket, $products);
            echo "\nНатисніть Enter, щоб повернутися до головного меню...";
            fgets(STDIN);
            clear_screen();
            break;
        case 3:
            handle_profile_setup($userProfile);
            echo "\nНатисніть Enter, щоб повернутися до головного меню...";
            fgets(STDIN);
            clear_screen();
            break;
        case 0:
            echo "Дякуємо, що завітали до нас! До побачення!\n";
            exit(0);
        default:
            clear_screen();
            echo "ПОМИЛКА! Введіть правильну команду\n\n";
            break;
    }
}


?>